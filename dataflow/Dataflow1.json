{
	"name": "Dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "saw-uofu-is6480-dldwhndev-001-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				},
				{
					"linkedService": {
						"referenceName": "saw-uofu-is6480-dldwhndev-001-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					},
					"name": "source2"
				},
				{
					"linkedService": {
						"referenceName": "saw-uofu-is6480-dldwhndev-001-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					},
					"name": "source3"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "saw-uofu-is6480-dldwhndev-001-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				},
				{
					"linkedService": {
						"referenceName": "saw-uofu-is6480-dldwhndev-001-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					},
					"name": "sink2"
				},
				{
					"linkedService": {
						"referenceName": "saw-uofu-is6480-dldwhndev-001-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					},
					"name": "sink3"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "select2"
				},
				{
					"name": "select3"
				}
			],
			"scriptLines": [
				"source(output(",
				"          actor_id as short,",
				"          first_name as string,",
				"          last_name as string,",
				"          last_update as string",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'fsuofuis6480dldw001',",
				"     folderPath: 'Gold/UofU/IS6480/Instructor/RentalDB/actor',",
				"     fileName: 'data.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> source1",
				"source(output(",
				"          film_id as short,",
				"          title as string,",
				"          description as string,",
				"          release_year as short,",
				"          language_id as string,",
				"          rental_duration as short,",
				"          rental_rate as double,",
				"          length as short,",
				"          replacement_cost as double,",
				"          rating as string,",
				"          last_update as string,",
				"          special_features as string,",
				"          fulltext as string",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'fsuofuis6480dldw001',",
				"     folderPath: 'Gold/UofU/IS6480/Instructor/RentalDB/film',",
				"     fileName: 'data.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> source2",
				"source(output(",
				"          actor_id as short,",
				"          film_id as short,",
				"          last_update as string",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'fsuofuis6480dldw001',",
				"     folderPath: 'Gold/UofU/IS6480/Instructor/RentalDB/film_actor',",
				"     fileName: 'data.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> source3",
				"source1 select(mapColumn(",
				"          ActorID = actor_id,",
				"          FirstName = first_name,",
				"          LastName = last_name,",
				"          LastUpdate = last_update",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"source2 select(mapColumn(",
				"          FilmID = film_id,",
				"          Title = title,",
				"          Description = description,",
				"          ReleaseYear = release_year,",
				"          LanguageID = language_id,",
				"          RentalDuration = rental_duration,",
				"          RentalRate = rental_rate,",
				"          Length = length,",
				"          ReplacementCost = replacement_cost,",
				"          Rating = rating,",
				"          LastUpdate = last_update,",
				"          SpecialFeatures = special_features,",
				"          Fulltext = fulltext",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"source3 select(skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     fileSystem: 'fsuofuis6480dldw001',",
				"     folderPath: 'Gold/UofU/IS6480/Instructor/RentalDB/ActorExtract',",
				"     mergeSchema: false,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable: false,",
				"     insertable: true,",
				"     updateable: false,",
				"     upsertable: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          ActorID,",
				"          FirstName,",
				"          LastName,",
				"          LastUpdate",
				"     )) ~> sink1",
				"select2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     fileSystem: 'fsuofuis6480dldw001',",
				"     folderPath: 'Gold/UofU/IS6480/Instructor/RentalDB/FilmExtract',",
				"     mergeSchema: false,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable: false,",
				"     insertable: true,",
				"     updateable: false,",
				"     upsertable: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink2",
				"select3 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     fileSystem: 'fsuofuis6480dldw001',",
				"     folderPath: 'Gold/UofU/IS6480/Instructor/RentalDB/FilmActorExtract',",
				"     mergeSchema: false,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable: false,",
				"     insertable: true,",
				"     updateable: false,",
				"     upsertable: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink3"
			]
		}
	}
}