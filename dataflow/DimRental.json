{
	"name": "DimRental",
	"properties": {
		"folder": {
			"name": "Project"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "saw-uofu-is6480-dldwhndev-001-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					},
					"name": "sourceRental"
				},
				{
					"linkedService": {
						"referenceName": "saw-uofu-is6480-dldwhndev-001-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					},
					"name": "sourceInventory"
				},
				{
					"linkedService": {
						"referenceName": "saw-uofu-is6480-dldwhndev-001-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					},
					"name": "sourcePayment"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "saw-uofu-is6480-dldwhndev-001-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "join1"
				},
				{
					"name": "join2"
				},
				{
					"name": "surrogateKey1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          rental_id as short,",
				"          rental_date as string,",
				"          inventory_id as short,",
				"          customer_id as short,",
				"          return_date as string,",
				"          staff_id as short,",
				"          last_update as string",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'fsuofuis6480dldw001',",
				"     folderPath: 'IS6480_DW_GroupSix_Project/rental',",
				"     fileName: 'data.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> sourceRental",
				"source(output(",
				"          inventory_id as short,",
				"          film_id as short,",
				"          store_id as short,",
				"          last_update as string",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'fsuofuis6480dldw001',",
				"     folderPath: 'IS6480_DW_GroupSix_Project/inventory',",
				"     fileName: 'data.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> sourceInventory",
				"source(output(",
				"          payment_id as short,",
				"          customer_id as short,",
				"          staff_id as short,",
				"          rental_id as short,",
				"          amount as double,",
				"          payment_date as string",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'fsuofuis6480dldw001',",
				"     folderPath: 'IS6480_DW_GroupSix_Project/payment',",
				"     fileName: 'data.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> sourcePayment",
				"sourceRental select(mapColumn(",
				"          RentalID = rental_id,",
				"          RentalDate = rental_date,",
				"          InventoryID = inventory_id,",
				"          CustomerID = customer_id,",
				"          ReturnDate = return_date",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: false) ~> select1",
				"select1, sourceInventory join(InventoryID == inventory_id,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'off')~> join1",
				"join1, sourcePayment join(RentalID == rental_id,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join2 keyGenerate(output(RentalKey as long),",
				"     startAt: 1L,",
				"     stepValue: 1L,",
				"     partitionBy('hash', 1)) ~> surrogateKey1",
				"surrogateKey1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     fileSystem: 'fsuofuis6480dldw001',",
				"     folderPath: 'IS6480_DW_GroupSix_Project/DimRental',",
				"     mergeSchema: false,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable: false,",
				"     insertable: true,",
				"     updateable: false,",
				"     upsertable: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          RentalKey,",
				"          RentalID,",
				"          RentalDate,",
				"          InventoryID,",
				"          CustomerID,",
				"          ReturnDate,",
				"          FilmID = film_id,",
				"          StoreID = store_id,",
				"          PaymentID = payment_id,",
				"          CustomerID = customer_id,",
				"          Amount = amount",
				"     )) ~> sink1"
			]
		}
	}
}